import Head from "next/head";
import { useState } from "react";
import axios from "axios";
import Script from "next/script";
import { NFTStorage } from "nft.storage";
import { toast } from "react-toastify";
const { Configuration, OpenAIApi } = require("openai");
export default function Home() {
  const [prompt, setPrompt] = useState("iron man");
  const [imageBlob, setImageBlob] = useState(null);
  const [loading, setLoading] = useState(true);
  const [file, setFile] = useState(null);
  const [modalOpen, setModalOpen] = useState(false);
  const [address, setAddress] = useState("");
  const [name, setName] = useState("");
  const [desc, setDesc] = useState("");
  const [minted, setMinted] = useState(false);
  const cleanupIPFS = (url) => {
    if (url.includes("ipfs://")) {
      return url.replace("ipfs://", "https://ipfs.io/ipfs/");
    }
  };
  const uploadArtToIpfs = async () => {
    try {
      const nftstorage = new NFTStorage({
        token: process.env.nft_storage_API,
      });

      const store = await nftstorage.store({
        name: "AI NFT",
        description: "AI generated NFT",
        image: file,
      });
      console.log(store);
      return cleanupIPFS(store.data.image.href);
    } catch (err) {
      console.log(err);
      return null;
    }
  };

  const mintNft = async () => {
    setModalOpen(false);
    setMinted(true);
    const resolveAfter3Sec = new Promise((resolve) =>
      setTimeout(resolve, 4000)
    );
    toast.promise(resolveAfter3Sec, {
      pending: "Minting your NFT",
      success: "NFT minted, check your opensea private section ðŸ‘Œ",
      error: "Error rejected ðŸ¤¯",
    });
    try {
      const imageURL = await uploadArtToIpfs();
      console.log("URL ", imageURL);
      // mint as an NFT on nftport
      const response = await axios.post(
        `https://api.nftport.xyz/v0/mints/easy/urls`,
        {
          file_url: imageURL,
          chain: "polygon",
          name: name?.length > 0 ? name : "Powered Heroes",
          description:
            desc?.length > 0
              ? desc
              : "AI generated NFT minted on powered-heroes.vercel.app",
          mint_to_address:
            address?.length > 0
              ? address
              : "0x659664dd23937edee4f19391A5C355FdbD4c93e6",
        },
        {
          headers: {
            Authorization: process.env.nft_port_API,
          },
        }
      );
      const data = await response.data;
      console.log(data);
    } catch (err) {
      console.log(err);
    }
  };
  const generateArt = async () => {
    toast.info("Generating your NFT. Please Be Patient", {
      position: "top-center",
      autoClose: 2000,
      hideProgressBar: false,
      closeOnClick: false,
      pauseOnHover: false,
      draggable: false,
      progress: undefined,
      theme: "dark",
    });
    try {
      const response = await axios.post(
        `https://api-inference.huggingface.co/models/runwayml/stable-diffusion-v1-5`,
        {
          headers: {
            Authorization: `Bearer ${process.env.hugging_face_API}}`,
          },
          method: "POST",
          inputs: prompt,
        },
        { responseType: "blob" }
      );
      // convert blob to a image file type
      const file = new File([response.data], "image.png", {
        type: "image/png",
      });
      // saving the file in a state
      setFile(file);
      const url = URL.createObjectURL(response.data);
      // console.log(url)
      console.log(url);
      setImageBlob(url);
      setLoading(false);
    } catch (err) {
      console.log(err);
    }
  //   const response = await openai.createImage({
  //     prompt: prompt+" nft",
  //     n: 1,
  //     size: "256x256",
  //   });
  //   const image_url = response.data.data[0].url;
  //   setImageBlob(image_url);
  };
  return (
    <div>
      <Head>
        <title>Powered Heroes</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="keyword" content="web3 ai-generated-nft ai-nft nft" />
        <link rel="icon" href="/icon.png" />
      </Head>
      <main>
        <Script
          src="https://kit.fontawesome.com/9b9304f5bd.js"
          crossorigin="anonymous"
        ></Script>
        <div
          className={`flex flex-col justify-center  ${
            loading ? "min-h-[90vh]" : "min-h-screen"
          }  gap-4 flex-wrap text-center items-center `}
        >
          <h1 className="text-5xl font-extrabold text-center text-purple-500">
            POWERED HEROES
          </h1>
          <h1 className="text-3xl font-bold">AI Generated Gasless NFT mints</h1>
          <div className="flex flex-col items-center justify-center gap-4 flex-wrap">
            <input
              className="border-2 border-sky-200 rounded-md p-2 w-full md:w-72"
              onChange={(e) => setPrompt(e.target.value)}
              type="text"
              placeholder="Enter a prompt to generate NFT art"
              value={prompt}
            />
            <button
              onClick={generateArt}
              className="bg-gradient-to-l from-purple-200 to-sky-100 text-black font-bold mr-4 ml-4 rounded-md p-5 "
            >
              Generate AI art
            </button>
          </div>
          <div className="p-6 h-full">
            {imageBlob && (
              <div className="flex flex-col gap-4 items-center justify-center">
                <img src={imageBlob} alt="AI generated art" />
                <button
                  className="bg-black text-white rounded-md p-2"
                  onClick={() => {
                    toast.warning(
                      "Enter your wallet address CAREFULLY.The NFT will be Minted on that Address only",
                      {
                        position: "top-center",
                        autoClose: 5000,
                        hideProgressBar: true,
                        closeOnClick: false,
                        pauseOnHover: true,
                        draggable: true,
                        progress: undefined,
                        theme: "colored",
                      }
                    );
                    setModalOpen(true);
                  }}
                >
                  Mint
                </button>
              </div>
            )}
          </div>
          {minted && (
            <div className="bg-slate-800 text-white underline p-3 border-2 border-yellow-200 cursor-pointer">
              <a
                href="https://opensea.io/account/private"
                target={"_blank"}
                rel="noreferrer"
              >
                Click here to see your nft{" "}
              </a>
            </div>
          )}
          {modalOpen && (
            <div class="bg-slate-800 bg-opacity-50 flex justify-center items-center absolute top-0 right-0 bottom-0 left-0">
              <div class="bg-white px-16 py-14 rounded-md text-center">
                <h1 class="text-xl mb-4 font-bold text-purple-500">
                  Do you Want to add custom details?
                </h1>
                <p class="text-sm mb-4 text-slate-500">
                  If you dont want to add custom details, you can mint the NFT
                  and AI withh generate a random name and description for you.
                </p>
                <input
                  className="border-2 border-sky-200 rounded-md p-2 w-full md:w-72"
                  onChange={(e) => setName(e.target.value)}
                  type="text"
                  placeholder="Enter the NFT name"
                  value={name}
                />
                <input
                  className="border-2 border-sky-200 rounded-md p-2 w-full md:w-72"
                  onChange={(e) => setDesc(e.target.value)}
                  type="text"
                  placeholder="Enter a description for the NFT"
                  value={desc}
                />
                <input
                  className="border-2 border-sky-200 rounded-md p-2 w-full md:w-72"
                  onChange={(e) => setAddress(e.target.value)}
                  type="text"
                  placeholder="Enter your WALLET ADDRESS"
                  value={address}
                  required
                />
                <button
                  class="bg-indigo-500 px-7 py-2 ml-2 rounded-md text-md text-white font-semibold"
                  onClick={mintNft}
                >
                  Ok
                </button>
              </div>
            </div>
          )}
        </div>
      </main>
      <footer
        className={`bg-gray-800 px-5 py-3 min-w-full ${
          loading ? "absolute bottom-0" : "block"
        }`}
      >
        <nav className="flex items-center justify-center flex-wrap md:justify-between sm:gap-5">
          <h3 className="text-white text-2xl font-medium ">
            Built by{" "}
            <a
              href="https://app.ens.domains/name/moayaan.eth/details"
              target={"_blank"}
              rel="noreferrer"
              className="text-white text-2xl font-medium underline"
            >
              {" "}
              <i class="fa-brands fa-ethereum"></i>moayaan.eth
              <i class="fa-brands fa-ethereum"></i>
            </a>
          </h3>

          <div className="flex space-x-3">
            <a
              className="text-gray-400 hover:text-white p-1"
              href="https://linktr.ee/ayaaneth"
              target={"_blank"}
              rel="noreferrer"
            >
              <i class="fa-solid fa-bolt"></i> Connect with dev{" "}
              <i class="fa-solid fa-bolt"></i>
            </a>
            <a
              className="text-gray-400 hover:text-white p-1 md:block block"
              href=" https://forms.gle/MHY9vDk8r3Xw7qGP6"
              target={"_blank"}
              rel="noreferrer"
            >
              Feedback Form <i class="fa-solid fa-align-justify"></i>
            </a>
            <a
              className="text-gray-400 hover:text-white p-1 md:block hidden"
              href="https://github.com/moayaan1911/powered"
              target={"_blank"}
              rel="noreferrer"
            >
              Github repo <i class="fa-brands fa-github"></i>
            </a>
            <a
              className="text-gray-400 hover:text-white p-1"
              href="https://youtu.be/MZUSn3nxb3U"
              target={"_blank"}
              rel="noreferrer"
            >
              Video Demo <i class="fa-solid fa-video"></i>
            </a>
          </div>
        </nav>
      </footer>
    </div>
  );
}
